#!/bin/bash
#####
# fbcset: fbterm color theme setter
# by Matt Black, 2018
#####


###
# Declare constants and flags
###
FBCSET_VERSION='0.1.0'
THEME_FILE_DIR="${HOME}/.fbthemes"
verbose=1
default_path=1

display_version() {
    echo "fbcset version ${FBCSET_VERSION} by Matt Black, 2018"
}

display_help() {
    display_version
    cat << 'EOF'
Usage: fbcset [options] theme-file-name

Options:
    -f | --file <path>          Read from a given file instead of
                                    scanning the default directory
    -h | --help                 Print this help text and exit
    -q | --quiet                Suppress standard output
    -v | --version              Print version and exit

By default, fbcset looks for themes in the $HOME/.fbthemes directory.
You can set the path explicitly using the -f option.

Theme files may contain any number (within fbterm's capabilities) of lines,
assigning one color per line in the following format:
<color#_decimal> #rrggbb

Example:
0       #202020
8       #4c4c4c
12      #a02030
EOF
}


###
# Handle opts
###
opts=$(getopt -o 'f:hqv' -l 'file:,help,quiet,version' -n 'fbcset' -- "$@")
if [ $? -ne 0 ]; then
    echo "Error getting options" >&2
    exit 1
fi

eval set -- "$opts"
unset opts

while true; do
    case "$1" in
        '-f'|'--file')
            default_path=0
            theme_file_path="$2"
            shift 2
            continue
            ;;
            
        '-h'|'--help')
            display_help
            exit 0
            ;;
        
        '-q'|'--quiet')
            verbose=0
            shift
            continue
            ;;
            
        '-v'|'--version')
            display_version
            exit 0
            ;;

        '--')
            shift
            break
            ;;
    esac
done


###
# Find the theme if custom path not set
###

# File path checks
if [ $default_path == 1 ]; then
    
    # Display help if arg missing
    if [ -z $1 ]; then
        display_help
        exit 5
    fi
    if [ ! -e $THEME_FILE_DIR ]; then
        echo 'Error: directory ~/.fbthemes not found' >&2
        exit 2
    elif [ ! -d $THEME_FILE_DIR ]; then
        echo 'Error: ~/.fbthemes is not a directory' >&2
        exit 3
    fi
    theme_file_name="$1"
    theme_file_path="${THEME_FILE_DIR}/${theme_file_name}"
fi

# Check if we can find and read the given file
if [ ! -e $theme_file_path ]; then
    echo "Error: file ${theme_file_path} not found" >&2
    exit 2
elif [ -d $theme_file_path ]; then
    echo "Error: target file is a directory" >&2
    exit 3
elif [ ! -r $theme_file_path ]; then
    echo "Error: could not read theme file" >&2
    exit 4
fi



###
# Parse and fulfill the instructions
###

SED_LINUM_PAT='/^[0-9]+\s*/!{q100}; s/(^[0-9]+).*/\1/'
SED_COLOR_PAT='/.*#[0-9a-fA-F]{6}/!{q101}; s/.*#([0-9a-fA-F]{6}).*/\1/'
SED_EMPTY_PAT='/^\s*$/{q99}; /^[#!;].*/{q99}'
linum=0

while IFS="" read -r line || [ -n "$line" ]; do
    # Line counter to help debug
    ((linum++))

    # Ignore empty, whitespace'd or commented out lines
    echo $line | sed -rn "${SED_EMPTY_PAT}"
    if [ $? -eq 99 ]; then
        continue
    fi

    # Parse the line number, exit with error code if no match
    col_num=`echo $line | sed -r "${SED_LINUM_PAT}"`

    # Check sed exit value
    if [ $? -ne 0 ]; then
        echo "Error: ${theme_file_path}: line ${linum}: missing color number" >&2
        exit 6
    fi

    # Parse the color, exit with error code if no match
    col_hex=`echo $line | sed -r "${SED_COLOR_PAT}"`

    # Check our exit value again
    if [ $? -ne 0 ]; then
        echo "Error: ${theme_file_path}: line ${linum}: missing or invalid color code" >&2
        exit 7
    fi

    # Translate colors to decimal R,G,B
    col_r=$(( 16#${col_hex:0:2} ))
    col_g=$(( 16#${col_hex:2:2} ))
    col_b=$(( 16#${col_hex:4:2} ))

    # Print progress messages
    [ $verbose == 0 ] || printf "setting color %03d: #%s/%03d,%03d,%03d\n"\
                                $col_num $col_hex $col_r $col_g $col_b

    # Construct and output the final escape sequence
    col_escape="\e[3;${col_num};${col_r};${col_g};${col_b}}"
    echo -en $col_escape
done < $theme_file_path

[ $verbose == 0 ] || echo "done"

exit 0
